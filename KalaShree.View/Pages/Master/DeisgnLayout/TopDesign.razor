@page "/topdesign"
@page "/topdesign/{Id:int}"
@if (formVisbilbilty==false) { 
<div class="container">
    <div class="card">
        <div class="card-header">
            <h4 class="text-center card-title">List Of All the Categories</h4>
        </div>
        <div class="card-body">
            <button type="button" class="btn btn-primary" @onclick="OpenAddCategoryForm">Add Category</button>
            @if (editButtonVisbile == true)
            {
                <button type="button" class="btn btn-primary ml-2" @onclick="(()=>OpenEditCatgoryForm(selectedRadio))">Edit Category</button>
                <button type="button" class="btn btn-primary ml-2" @onclick="(()=>HandleDelete(selectedRadio))">Delete Category</button>
            }
            <table class="table table-bordered">
                <thead>
                    <tr>
                        <th></th>
                        <th>Id</th>
                        <th>Category Code</th>
                        <th>Category Name</th>
                        <th>CreatedAt</th>
                        <th>UpdateAt</th>

                    </tr>
                </thead>
                <tbody>
                    @foreach (var cate in categories)
                    {
                        <tr>
                            <td>
                                @*<input type="radio" name="group" value="@cate.CategoryId" class="form-check-input ml-2 text-center"
                            checked="@(selectedRadio==cate.CategoryId)" @onclick="@(()=>selectedRadio=cate.CategoryId)" @onchange="EditButtonShow" />*@
                                <input type="radio" name="group" @bind-value="cate.CategoryId" class="form-check-input ml-2 text-center"
                                       checked="@(selectedRadio==cate.CategoryId)" @onclick="(()=>EditButtonShow(cate.CategoryId))" />
                            </td>
                            <td>@cate.CategoryId</td>
                            <td>@cate.CategoryCode</td>
                            <td>@cate.CategoryName</td>
                            <td>@cate.CreatedAt.ToString("dd/MM/yy")</td>
                            <td>@cate.UpdatedAt.ToString("dd/MM/yy")</td>

                        </tr>

                    }

                </tbody>
            </table>
        </div>
       @*@selectedRadio*@
    </div>
</div>

}
@if (formVisbilbilty == true) { 
<div class="container">
    <div class="card">
        <div class="card-header">
            <h5 class="text-center card-title">Add the Category</h5>
        </div>
        <div class="card-body">
            <div class="form-group">
                <EditForm Model="categoryMode" OnValidSubmit="HandleForm">
                    <DataAnnotationsValidator />
                    <ValidationSummary />
                    <div class="row">
                        <div class="col-sm-6">
                            <div class="form-group">
                                <label for="name">Category Name</label>
                                <input type="text" for="name" class="form-control" @bind-value="categoryMode.CategoryName" />
                            </div>
                        </div>
                        <div class="col-sm-6">
                            <div class="form-group">
                                <label for="desc">Category Desc</label>
                                <input type="text" for="desc" class="form-control" @bind-value="categoryMode.CategoryDesc" />
                            </div>
                        </div>
                        <div class="text-center mt-2">
                            <button type="submit" class="btn btn-primary">@ButtonLabel</button>
                            <button type="button" @onclick="CancelTask" class="btn btn-primary">Cancel</button>
                        </div>
                    </div>
                </EditForm>
            </div>
        </div>

    </div>
</div>
}
@code {
    private IEnumerable<Category> categories;
    [Inject]
    private ICategoryRepo categoryRepo { get; set; }

    private Category categoryMode = new Category();
    private string ButtonLabel = "Add Category";
    public string errorMessage { get; set; } = string.Empty;
    [Inject]
    private NavigationManager Navigation { get; set; }
    [Parameter]
    public int Id { get; set; }
    private void LoadCategories()
    {
        categories = categoryRepo.GetCategories();
    }
    protected override void OnInitialized()
    {


        // handling the cancel Button issue
        if(ButtonLabel == "Update Category" && categoryMode.CategoryId != 0)
        {
            var cat = categoryRepo.GetCategoriesById(Id);
            this.categoryMode = new Category()
            {

                CategoryName = cat.CategoryName,
                CategoryCode = cat.CategoryCode,
                CategoryDesc = cat.CategoryDesc,

            };
        }
        LoadCategories();
    }

    //opening of the form and manage Task

    private bool formVisbilbilty = false;

    public void OpenAddCategoryForm()
    {
        formVisbilbilty = true;

    }
    public void HandleForm()
    {
        if (ButtonLabel == "Add Category" && categoryMode.CategoryId == 0)
        {
            if (categoryRepo.AlreadyExtistCategory(categoryMode) == true)
            {
                errorMessage = $"Can not Add the dublicate {categoryMode.CategoryName} and {categoryMode.CategoryCode}";
                DisapperErrorMessage();
            }
            else
            {
                categoryRepo.AddCategory(categoryMode);
                Navigation.NavigateTo("/topdesign", true);
                LoadCategories();

            }

        }
        else if (ButtonLabel == "Update Category" && categoryMode.CategoryId != 0)
        {
            categoryRepo.UpdateCategory(categoryMode);
            Navigation.NavigateTo("topdesign", true);
            LoadCategories();
        }
    }
    private void CancelTask()
    {
        formVisbilbilty = false;
    }
    public async void DisapperErrorMessage()
    {
        await Task.Delay(2000);
        errorMessage = string.Empty;
        StateHasChanged();
    }

    //for radion button
    private int selectedRadio { get; set; } = 0;
    private void OpenEditCatgoryForm(int id)
    {
        formVisbilbilty = true;
        Navigation.NavigateTo($"/topdesign/{id}");
        ButtonLabel = "Update Category";
        categoryMode = categoryRepo.GetCategoriesById(id);

    }
    private bool editButtonVisbile = false;
    public void EditButtonShow(int id)
    {
        selectedRadio = id;
        if(selectedRadio >0)
        {
            editButtonVisbile = true;
        }
    }
    public void HandleDelete(int id)
    {
        categoryRepo.DeleteCategory(id);
        LoadCategories();
    }

}
